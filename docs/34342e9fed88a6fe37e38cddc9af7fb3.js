require=function(r,e,n){function t(n,o){function i(r){return t(i.resolve(r))}function f(e){return r[n][1][e]||e}if(!e[n]){if(!r[n]){var c="function"==typeof require&&require;if(!o&&c)return c(n,!0);if(u)return u(n,!0);var l=new Error("Cannot find module '"+n+"'");throw l.code="MODULE_NOT_FOUND",l}i.resolve=f;var s=e[n]=new t.Module(n);r[n][0].call(s.exports,i,s,s.exports)}return e[n].exports}function o(r){this.id=r,this.bundle=t,this.exports={}}var u="function"==typeof require&&require;t.isParcelRequire=!0,t.Module=o,t.modules=r,t.cache=e,t.parent=u;for(var i=0;i<n.length;i++)t(n[i]);return t}({9:[function(require,module,exports) {
var e=(location.pathname.startsWith("/konomi/")?"/konomi":"/dist")+"/opencv/";importScripts(e+"opencv.js");var a=new XMLHttpRequest,t=e+"haarcascade_frontalface_default.xml";a.open("GET",t,!0),a.responseType="arraybuffer",a.onload=function(){if(4===a.readyState)if(200===a.status){var e=new Uint8Array(a.response);cv.FS_createDataFile("/","haarcascade_frontalface_default.xml",e,!0,!1,!1),postMessage({type:"load"})}else postMessage({type:"load",error:new Error("Failed to load "+t+". status: "+a.status)})},a.send(),self.onmessage=function(e){var a=e.data;switch(a.type){case"detectFaces":c(a.img)}};var s=void 0;function c(e){var a=cv.matFromImageData(e),t=new cv.Mat;cv.cvtColor(a,t,cv.COLOR_RGBA2GRAY,0);var c=new cv.RectVector;s||(s=new cv.CascadeClassifier).load("haarcascade_frontalface_default.xml"),s.detectMultiScale(t,c);for(var o=[],r=0;r<c.size();r+=1)o.push(c.get(r));postMessage({type:"detectFaces",faces:o}),a.delete(),c.delete(),t.delete()}
},{}]},{},[9])